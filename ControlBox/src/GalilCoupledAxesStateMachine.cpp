static const char *RcsId = "$Header: /usr/local/CVS/DeviceServer/Generic/Motorisation/ControlBoxV2/src/GalilCoupledAxesStateMachine.cpp,v 1.3 2011/07/15 09:47:43 buteau Exp $";
//+=============================================================================
//
// file :         GalilCoupledAxesStateMachine.cpp
//
// description :  C++ source for the GalilCoupledAxes and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author: buteau $
//
// $Revision: 1.3 $
//
// $Log: GalilCoupledAxesStateMachine.cpp,v $
// Revision 1.3  2011/07/15 09:47:43  buteau
// MANTIS 19368
//
// Revision 1.2  2011/07/15 09:40:53  buteau
// MANTIS 19368
//
// Revision 1.1  2007/11/16 09:39:31  leclercq
// no message
//
// Revision 1.1  2007/11/15 16:15:22  coquet
// added Coupled Axes support
// handeles internally coupled axes, device controls only the master position
// example : the detector table of swing with 2 synchronised motors
// the coupling is provided in the micro-code in the controlbox
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <GalilCoupledAxes.h>
#include <GalilCoupledAxesClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace GalilCoupledAxes_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		GalilCoupledAxes::is_position_allowed
// 
// description : 	Read/Write allowed for position attribute.
//
//-----------------------------------------------------------------------------
bool GalilCoupledAxes::is_position_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilCoupledAxes::is_forwardLimitSwitch_allowed
// 
// description : 	Read/Write allowed for forwardLimitSwitch attribute.
//
//-----------------------------------------------------------------------------
bool GalilCoupledAxes::is_forwardLimitSwitch_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilCoupledAxes::is_backwardLimitSwitch_allowed
// 
// description : 	Read/Write allowed for backwardLimitSwitch attribute.
//
//-----------------------------------------------------------------------------
bool GalilCoupledAxes::is_backwardLimitSwitch_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		GalilCoupledAxes::is_Stop_allowed
// 
// description : 	Execution allowed for Stop command.
//
//-----------------------------------------------------------------------------
bool GalilCoupledAxes::is_Stop_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilCoupledAxes::is_Forward_allowed
// 
// description : 	Execution allowed for Forward command.
//
//-----------------------------------------------------------------------------
bool GalilCoupledAxes::is_Forward_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilCoupledAxes::is_Backward_allowed
// 
// description : 	Execution allowed for Backward command.
//
//-----------------------------------------------------------------------------
bool GalilCoupledAxes::is_Backward_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace GalilCoupledAxes_ns
