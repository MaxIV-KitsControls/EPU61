/*----- PROTECTED REGION ID(CoilCorrection.h) ENABLED START -----*/
//=============================================================================
//
// file :        CoilCorrection.h
//
// description : Include for the CoilCorrection class.
//
// project :     .
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef COILCORRECTION_H
#define COILCORRECTION_H


#include <tango.h>
#include <string>
#include <vector>
#include <boost/scoped_array.hpp>

#include "DataItem.h"
#include "PowerSupply.h"
/*----- PROTECTED REGION END -----*/


/**
 *	CoilCorrection class Description:
 *	
 */

namespace CoilCorrection_ns
{
	/*----- PROTECTED REGION ID(CoilCorrection::Additional Class Declarations) ENABLED START -----*/

	class PollerThread;

	/*----- PROTECTED REGION END -----*/	//	CoilCorrection::Additional Class Declarations


class CoilCorrection : public Tango::Device_4Impl
{


	/*----- PROTECTED REGION ID(CoilCorrection::Data Members) ENABLED START -----*/
private:
	boost::scoped_array<PowerSupply> supplies;	//!< 4 power supplies

	vector<DataItem> data; 	//!< Interpolation table, straight entries

	PollerThread *pollerThread;	//!< Pointer to pooling thread
    omni_mutex lock;			//!< Lock for accessing shared data

    friend class PollerThread;

	/*----- PROTECTED REGION END -----*/	//	CoilCorrection::Data Members


//	Device property data members
public:		//	ControlBoxGap:	Link to controlbox moving gap axes.
	string	controlBoxGap;
	//	ControlBoxPhase:	Link to controlbox moving phase axes.
	string	controlBoxPhase;
	//	DataFile:	Filename containing interpolation data
	string	dataFile;
	

//	Attribute data members
public:
	Tango::DevDouble	*attr_Coil1Readback_read;
	Tango::DevDouble	*attr_Coil2Readback_read;
	Tango::DevDouble	*attr_Coil3Readback_read;
	Tango::DevDouble	*attr_Coil4Readback_read;
	Tango::DevDouble	*attr_Coil1Setpoint_read;
	Tango::DevDouble	*attr_Coil2Setpoint_read;
	Tango::DevDouble	*attr_Coil3Setpoint_read;
	Tango::DevDouble	*attr_Coil4Setpoint_read;



//	Constructors and destructors
public:
	/**
	 * Constructs a newly allocated Command object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	CoilCorrection(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly allocated Command object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	CoilCorrection(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly allocated Command object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	CoilCorrection(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The object destructor.
	 */	
	~CoilCorrection() {delete_device();};



//	Miscellaneous methods
public:
	/**
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/**
	 *	Initialize the device
	 */
	virtual void init_device();
	/**
	 *	Read the device properties from database
	 */
	 void get_device_property();
	/**
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	/**
	 *	Method      : CoilCorrection::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	virtual void read_attr_hardware(vector<long> &attr_list);


	/**
	 *	Coil1Readback attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil1Readback(Tango::Attribute &attr);
	virtual bool is_Coil1Readback_allowed(Tango::AttReqType type);



	/**
	 *	Coil2Readback attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil2Readback(Tango::Attribute &attr);
	virtual bool is_Coil2Readback_allowed(Tango::AttReqType type);



	/**
	 *	Coil3Readback attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil3Readback(Tango::Attribute &attr);
	virtual bool is_Coil3Readback_allowed(Tango::AttReqType type);



	/**
	 *	Coil4Readback attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil4Readback(Tango::Attribute &attr);
	virtual bool is_Coil4Readback_allowed(Tango::AttReqType type);



	/**
	 *	Coil1Setpoint attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil1Setpoint(Tango::Attribute &attr);
	virtual void write_Coil1Setpoint(Tango::WAttribute &attr);
	virtual bool is_Coil1Setpoint_allowed(Tango::AttReqType type);



	/**
	 *	Coil2Setpoint attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil2Setpoint(Tango::Attribute &attr);
	virtual void write_Coil2Setpoint(Tango::WAttribute &attr);
	virtual bool is_Coil2Setpoint_allowed(Tango::AttReqType type);



	/**
	 *	Coil3Setpoint attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil3Setpoint(Tango::Attribute &attr);
	virtual void write_Coil3Setpoint(Tango::WAttribute &attr);
	virtual bool is_Coil3Setpoint_allowed(Tango::AttReqType type);



	/**
	 *	Coil4Setpoint attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_Coil4Setpoint(Tango::Attribute &attr);
	virtual void write_Coil4Setpoint(Tango::WAttribute &attr);
	virtual bool is_Coil4Setpoint_allowed(Tango::AttReqType type);



	/**
	 *	Method      : CoilCorrection::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
		void add_dynamic_attributes();

//	Command related methods
public: 


	/**
	 *	Command On related methods.
	 */
	void on();
	virtual bool is_On_allowed(const CORBA::Any &any);

	/**
	 *	Command Off related methods.
	 */
	void off();
	virtual bool is_Off_allowed(const CORBA::Any &any);

	/**
	 *	Command Load related methods.
	 */
	void load(Tango::DevString argin);
	virtual bool is_Load_allowed(const CORBA::Any &any);

	/**
	 *	Command Run related methods.
	 */
	void run();
	virtual bool is_Run_allowed(const CORBA::Any &any);



	/*----- PROTECTED REGION ID(CoilCorrection::Additional Method prototypes) ENABLED START -----*/

	//	Additional Method prototypes

	/*----- PROTECTED REGION END -----*/	//	CoilCorrection::Additional Method prototypes

};

	/*----- PROTECTED REGION ID(CoilCorrection::Additional Classes Definitions) ENABLED START -----*/

	//	Additional Classes definitions

	/*----- PROTECTED REGION END -----*/	//	CoilCorrection::Additional Classes Definitions

} //	namespace

#endif	//	COILCORRECTION_H
