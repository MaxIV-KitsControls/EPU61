static const char *RcsId = "$Header: /usr/local/CVS/DeviceServer/Generic/Motorisation/ControlBoxV2/src/GalilGearedAxesStateMachine.cpp,v 1.3 2011/07/15 09:47:43 buteau Exp $";
//+=============================================================================
//
// file :         GalilGearedAxesStateMachine.cpp
//
// description :  C++ source for the GalilGearedAxes and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author: buteau $
//
// $Revision: 1.3 $
//
// $Log: GalilGearedAxesStateMachine.cpp,v $
// Revision 1.3  2011/07/15 09:47:43  buteau
// MANTIS 19368
//
// Revision 1.1  2008/05/28 12:06:27  coquet
// added GalilGearedAxes Tango Class to add suppport for geared axes with user ratio capability
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <GalilGearedAxes.h>
#include <GalilGearedAxesClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace GalilGearedAxes_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		GalilGearedAxes::is_masterPosition_allowed
// 
// description : 	Read/Write allowed for masterPosition attribute.
//
//-----------------------------------------------------------------------------
bool GalilGearedAxes::is_masterPosition_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilGearedAxes::is_slavePosition_allowed
// 
// description : 	Read/Write allowed for slavePosition attribute.
//
//-----------------------------------------------------------------------------
bool GalilGearedAxes::is_slavePosition_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilGearedAxes::is_isGeared_allowed
// 
// description : 	Read/Write allowed for isGeared attribute.
//
//-----------------------------------------------------------------------------
bool GalilGearedAxes::is_isGeared_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		GalilGearedAxes::is_Stop_allowed
// 
// description : 	Execution allowed for Stop command.
//
//-----------------------------------------------------------------------------
bool GalilGearedAxes::is_Stop_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilGearedAxes::is_SetIndependantMode_allowed
// 
// description : 	Execution allowed for SetIndependantMode command.
//
//-----------------------------------------------------------------------------
bool GalilGearedAxes::is_SetIndependantMode_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilGearedAxes::is_SetGearedMode_allowed
// 
// description : 	Execution allowed for SetGearedMode command.
//
//-----------------------------------------------------------------------------
bool GalilGearedAxes::is_SetGearedMode_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}

}	// namespace GalilGearedAxes_ns
