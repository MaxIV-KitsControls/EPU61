static const char *RcsId = "$Header: /usr/local/CVS/DeviceServer/Generic/Motorisation/ControlBoxV2/src/ControlBoxStateMachine.cpp,v 1.5 2011/07/15 09:47:42 buteau Exp $";
//+=============================================================================
//
// file :         ControlBoxStateMachine.cpp
//
// description :  C++ source for the ControlBox and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author: buteau $
//
// $Revision: 1.5 $
//
// $Log: ControlBoxStateMachine.cpp,v $
// Revision 1.5  2011/07/15 09:47:42  buteau
// MANTIS 19368
//
// Revision 1.3  2007/01/05 08:37:51  coquet
// * bug corrections
// * now supports negative AxisPositionRatio use it to have a positive move direction opposite to the positive move direction defined by motorist
// * added ControlBox:GetFirmwareRevision, view the firmware revision command <CTRL>R<CTRL>V
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <ControlBox.h>
#include <ControlBoxClass.h>
#include <tango.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace ControlBox_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		ControlBox::is_oKCommandCounter_allowed
// 
// description : 	Read/Write allowed for oKCommandCounter attribute.
//
//-----------------------------------------------------------------------------
bool ControlBox::is_oKCommandCounter_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		ControlBox::is_badCommandCounter_allowed
// 
// description : 	Read/Write allowed for badCommandCounter attribute.
//
//-----------------------------------------------------------------------------
bool ControlBox::is_badCommandCounter_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		ControlBox::is_Reset_allowed
// 
// description : 	Execution allowed for Reset command.
//
//-----------------------------------------------------------------------------
bool ControlBox::is_Reset_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		ControlBox::is_StartMicrocode_allowed
// 
// description : 	Execution allowed for StartMicrocode command.
//
//-----------------------------------------------------------------------------
bool ControlBox::is_StartMicrocode_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		ControlBox::is_GetMicrocodeRevision_allowed
// 
// description : 	Execution allowed for GetMicrocodeRevision command.
//
//-----------------------------------------------------------------------------
bool ControlBox::is_GetMicrocodeRevision_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		ControlBox::is_GetFirmwareRevision_allowed
// 
// description : 	Execution allowed for GetFirmwareRevision command.
//
//-----------------------------------------------------------------------------
bool ControlBox::is_GetFirmwareRevision_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		ControlBox::is_ExecLowLevelCmd_allowed
// 
// description : 	Execution allowed for ExecLowLevelCmd command.
//
//-----------------------------------------------------------------------------
bool ControlBox::is_ExecLowLevelCmd_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace ControlBox_ns
