static const char *RcsId = "$Header: /usr/local/CVS/DeviceServer/Generic/Motorisation/ControlBoxV2/src/GalilSlitStateMachine.cpp,v 1.10 2011/07/15 09:47:43 buteau Exp $";
//+=============================================================================
//
// file :         GalilSlitStateMachine.cpp
//
// description :  C++ source for the GalilSlit and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author: buteau $
//
// $Revision: 1.10 $
//
// $Log: GalilSlitStateMachine.cpp,v $
// Revision 1.10  2011/07/15 09:47:43  buteau
// MANTIS 19368
//
// Revision 1.9  2011/07/15 09:40:53  buteau
// MANTIS 19368
//
// Revision 1.8  2010/02/09 12:59:27  coquet
// GalilSlit
// added commands ComputeGapOffset ComputePositionOffset
//
// Revision 1.7  2010/01/13 09:54:31  coquet
// added commands On Off to GalilSlit
//
// Revision 1.6  2007/10/16 12:43:35  coquet
// attributes positionOffset and gapOffset are now protected against write while MOVING
//
// Revision 1.5  2007/10/12 14:24:25  coquet
// attributes positionOffset and gapOffset are now memorized / write on HW at init
// tested under W32
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <GalilSlit.h>
#include <GalilSlitClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace GalilSlit_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_gap_allowed
// 
// description : 	Read/Write allowed for gap attribute.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_gap_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_position_allowed
// 
// description : 	Read/Write allowed for position attribute.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_position_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_insideUpPosition_allowed
// 
// description : 	Read/Write allowed for insideUpPosition attribute.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_insideUpPosition_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_outsideDownPosition_allowed
// 
// description : 	Read/Write allowed for outsideDownPosition attribute.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_outsideDownPosition_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_positionOffset_allowed
// 
// description : 	Read/Write allowed for positionOffset attribute.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_positionOffset_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code
		if (type == Tango::READ_REQ )
		{
		  return true;
		}

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_gapOffset_allowed
// 
// description : 	Read/Write allowed for gapOffset attribute.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_gapOffset_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code
		if (type == Tango::READ_REQ )
		{
		  return true;
		}

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_Stop_allowed
// 
// description : 	Execution allowed for Stop command.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_Stop_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_SetIndependantMode_allowed
// 
// description : 	Execution allowed for SetIndependantMode command.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_SetIndependantMode_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::MOVING)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_Off_allowed
// 
// description : 	Execution allowed for Off command.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_Off_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_On_allowed
// 
// description : 	Execution allowed for On command.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_On_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_ComputeNewGapOffset_allowed
// 
// description : 	Execution allowed for ComputeNewGapOffset command.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_ComputeNewGapOffset_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		GalilSlit::is_ComputeNewPositionOffset_allowed
// 
// description : 	Execution allowed for ComputeNewPositionOffset command.
//
//-----------------------------------------------------------------------------
bool GalilSlit::is_ComputeNewPositionOffset_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace GalilSlit_ns
